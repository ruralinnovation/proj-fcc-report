[
  {
    "objectID": "isp_eda.html",
    "href": "isp_eda.html",
    "title": "EDA on ISP",
    "section": "",
    "text": "Code\ntable_with_options &lt;- function(x){DT::datatable(x, rownames = FALSE,\n              extensions = 'Buttons', \n                options = list(\n                          dom = 'Blfrtip',\n                          buttons = list('copy', 'print', list(\n                            extend = 'collection',\n                            buttons = c('csv', 'excel'),\n                            text = 'Download')\n                                    )\n                          )\n            )}\nWe are starting a first exploratory data analysis around ISPs in the FCC BDC data set. It should be kept in mind that an ISP can be multiple time in the same location (offering multiple service).\nThe query that generated this first pass at it is here:\nThe name of the column match FCC description.\nWe are adding:\nIt can be explored here:\nCode\nisp &lt;- read.csv(\"data/isp_v2.csv\")\ncolnames(isp) &lt;- c(\"brand_name\", \"state_abbr\", \"technology\",\n\"provider_id\", \"cnt_services\", \"cnt_total_locations\", \"cnt_block_presence\")\n\nisp$temp &lt;- paste0(isp$brand_name, isp$provider_id)\nisp &lt;- isp[order(isp$temp),]\nisp$ID &lt;- cumsum(!duplicated(isp$temp))\nisp$ct[!duplicated(isp$ID)] &lt;- 1 \nisp$multiple_name_id &lt;- ave(isp$ct, isp$provider_id, FUN = function(x) sum(x , na.rm = TRUE))\nisp &lt;- isp[,c(\"ID\", \"brand_name\", \"provider_id\", \"multiple_name_id\", \"state_abbr\", \"technology\", \n            \"cnt_services\", \"cnt_total_locations\", \"cnt_block_presence\")]\ntable_with_options(isp[order(isp$cnt_services,decreasing = TRUE),])"
  },
  {
    "objectID": "isp_eda.html#numbers-for-context",
    "href": "isp_eda.html#numbers-for-context",
    "title": "EDA on ISP",
    "section": "Numbers for context:",
    "text": "Numbers for context:\n\n\nCode\nfilter_sat &lt;- c(60, 61, 70)\nisp_slim &lt;- isp[! isp$technology %in% filter_sat, ]\n\n\nIn June 2023 we have 2902 unique ISP brand name but only 2431 if we remove the ISP that only offer Satellite or Unlicensed Wireless.\nFor the rest of the analysis I will not take into account Satellite data and Unlicensed Wireless.\nOur first step will be to try having some “unique” brand name so we can be confident we are correctly counting the same ISP (or not)."
  },
  {
    "objectID": "isp_eda.html#organize-a-bit-brand_name-and-provider_id",
    "href": "isp_eda.html#organize-a-bit-brand_name-and-provider_id",
    "title": "EDA on ISP",
    "section": "Organize a bit brand_name and provider_id",
    "text": "Organize a bit brand_name and provider_id\n::: {.cell}\n\nCode\nisp_slim$brand_name &lt;- tolower(isp_slim$brand_name)\n\n:::\nIt seems that we have:\n- brand name with and without capital letter (VERIZON, Verizon): if we tolower brand name we get 2414 unique brand name.\n\n\nCode\nisp_agg &lt;- aggregate(isp_slim[\"cnt_services\"], isp_slim[\"brand_name\"], sum)\ntable_with_options(isp_agg[order(isp_agg$cnt_services, decreasing = TRUE), ])\n\n\n\n\n\n\nI have done a smaller .csv just with brand_name provider_id and cnt_services just to inspect what is the relation between them (1 to 1 / 1 to many). Outside of typos we should not have many to many relation.\nSELECT\n    brand_name,\n    provider_id,\n    count(*) cnt_services\nFROM staging.june23\nGROUP BY brand_name, provider_id\nORDER BY cnt_services desc;\n\n\nCode\nisp_list &lt;- read.csv(\"data/isp_prov.csv\")\nisp_list$ct &lt;- 1  \nisp_list$name_id &lt;- ave(isp_list$ct, isp_list$provider_id, FUN = sum)\n#View(isp_list[!is.na(isp_list$new_name),])\n\n\n\nTCT\n\n\nCode\ntable_with_options(isp_list[grepl(\"^TCT \", isp_list$brand_name) ,])\n\n\n\n\n\n\nCode\nisp_list[isp_list$provider_id == 410172,]\n\n\n                                     brand_name provider_id cnt_services ct\n1584 The Tri-County Telephone Association, Inc.      410172         4260  1\n1957            Council Grove Telephone Company      410172         1992  1\n2025                                        TCT      410172         1681  1\n     name_id\n1584       3\n1957       3\n2025       3\n\n\nTCT has some non-conventional names but nearly all of them has the same provider_id. An other “TCT” exist but with a different provider_id (410172) shared with two other brand name. I will assume that all of this TCT XXX are the same and provide them with a temporary name TCT_131366.\n\n\nCode\nisp_list$new_name[grepl(\"^TCT \", isp_list$brand_name)] &lt;- \"TCT_131366\"\n\n\n\n\nWindstream\nWindtream present a similar case but the position of Windstream is not always the first word (Georgia Windstream, LLC). I went with the solution than TCT: Windstream_131413\n\n\nCode\ntable_with_options(isp_list[grepl(\"Windstream\", isp_list$brand_name) ,]) \n\n\n\n\n\n\nCode\nisp_list$new_name[grepl(\"Windstream\", isp_list$brand_name)] &lt;- \"Windstream_131413\" \n\n\n\n\nAcentek/Acentek\nIt exists in both forms (tolower() will correct it) but it is also sharing it’s provider_id with some non-conventional “name”:\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130008,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130008] &lt;- \"acentek\"\n\n\nFor now I will go with attributing them to “acentek”` but an other option will be to just remove them.\n\n\nMediacom - Bolt\n\n\nCode\ntable_with_options(isp_list[grepl(\"Mediacom|Bolt\", isp_list$brand_name) ,]) \n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130804] &lt;- \"mediacom_bolt\"\n\n\nIt appears that Bolt and Mediacom share the same provider_id and are together in some brand_name. I think we should regroup them but this definietly more domain knowledge than the one I have!\n\n\nComporium\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 131125,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 131125] &lt;- \"comporium\"\n\n\nFor this one I am for renaming them “comporium”\n\n\nArmstrong\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130071,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130071] &lt;- \"armstrong\"\n\n\nIdem label to “armstrong”?\n\n\nTEC\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 131311,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 131311] &lt;- \"TEC\"\n\n\n\n\nPUD\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 290075,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 290075] &lt;- \"PUD\"\n\n\nLabel to “PUD” ?\n\n\nGoNetspeed?\nI am unsure about that one. We can regroup the two GoNetspeed but we are lacking information for the rest.\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 131378,])\n\n\n\n\n\n\n\n\nMHTC\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130862,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130862] &lt;- \"MHTC\"\n\n\nLabel MHTC?\n\n\nHardy\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130588,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130588] &lt;- \"Hardy\"\n\n\nlabel Hardy?\n\n\nOmniTel\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130484,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130484] &lt;- \"OmniTel\"\n\n\n\n\nHamilton\n\n\nCode\ntable_with_options(isp_list[isp_list$provider_id == 130887,])\n\n\n\n\n\n\nCode\nisp_list$new_name[isp_list$provider_id == 130887] &lt;- \"Hamilton\"\n\n\nlabel Hamilton?\n\n\nMultiple brand_name with same provider_id\n\nprovider_id: 131413, same provider id than windstream but probably a different entity?\nprovider_id 130485: look very similar (SHLB in the name 8/10)\nlist of provider_id associated with multiple brand name:\n\n130074\n131378\n190233\n160127\n150277\n150266\n130183\n300192\n131362\n130877\n130757 (regroup Long lines?)\n130778 (Manti 5/6)\n330025\n130254 (2/5 altafiber)\n150334\n130906\n130425 (2/5 Lavaca)\n130206\n130453 (3/5 EFIBER)\n140092 (3/5 Twin Valley)\n140030\n130142"
  },
  {
    "objectID": "isp_eda.html#todo-list",
    "href": "isp_eda.html#todo-list",
    "title": "EDA on ISP",
    "section": "TODO list:",
    "text": "TODO list:\n[ ] provider_id: 586211"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": ".",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "ntia_test.html",
    "href": "ntia_test.html",
    "title": "testing other eligibilities",
    "section": "",
    "text": "Code\ntable_with_options &lt;- function(x){DT::datatable(x, rownames = FALSE,\n              extensions = 'Buttons', \n                options = list(\n                          dom = 'Blfrtip',\n                          buttons = list('copy', 'print', list(\n                            extend = 'collection',\n                            buttons = c('csv', 'excel'),\n                            text = 'Download')\n                                    )\n                          )\n            )}\nThe goal of this page is to record the effect on not including some technologies on the eligibility of BSL and census block.\nThe dataset to produce this comparison was done quickly and processed with pgadmin."
  },
  {
    "objectID": "ntia_test.html#base-table",
    "href": "ntia_test.html#base-table",
    "title": "testing other eligibilities",
    "section": "Base table",
    "text": "Base table\n\n\nCode\n-- we need the list of census block\ncreate table staging.us_ntia(\n    geoid_bl char(15)   \n);\ninsert into \n    staging.us_ntia\nselect \n    geoid20 as geoid_bl\nfrom \n    sch_census_tiger.source_tiger_2020_blocks;\n\n\n-- we count all locations\nalter table staging.us_ntia \nadd column cnt_total_locations integer;\nupdate\n    staging.us_ntia as t1\nset \n    cnt_total_locations = t2.cnt_total_locations\nfrom \n    (select \n        block_geoid,\n        count(distinct location_id) as cnt_total_locations\n    from \n        staging.june23  \n    group by \n        block_geoid)  as t2\nwhere   \n    t1.geoid_bl = t2.block_geoid;\n\n-- we count all bcat locations only\n-- this is needed for the case when we have locations but 0 mesures\nalter table staging.us_ntia \nadd column cnt_bcat_locations integer;\nupdate\n    staging.us_ntia as t1\nset \n    cnt_bcat_locations = t2.cnt_bcat_locations\nfrom \n    (select \n        block_geoid,\n        count(distinct location_id) as cnt_bcat_locations\n    from \n        staging.bcat_raw    \n    group by \n        block_geoid)  as t2\nwhere    \n    t1.geoid_bl = t2.block_geoid;"
  },
  {
    "objectID": "ntia_test.html#creating-counts-of-locations",
    "href": "ntia_test.html#creating-counts-of-locations",
    "title": "testing other eligibilities",
    "section": "Creating counts of locations",
    "text": "Creating counts of locations\n\n\nCode\nalter table staging.us_ntia\nadd column cnt_25_3_past int,\nadd column cnt_100_20_past int,\nadd column cnt_100_20_not_dsl int,\nadd column cnt_100_20_not_wireless int,\nadd column cnt_100_20_not_dsl_wireless int;\n\nupdate\n    staging.us_ntia as t1\nset \n    cnt_25_3_past = t2.cnt_25_3_past,\n    cnt_100_20_past = t2.cnt_100_20_past,\n    cnt_100_20_not_dsl = t2.cnt_100_20_not_dsl,\n    cnt_100_20_not_wireless = t2.cnt_100_20_not_wireless,\n    cnt_100_20_not_dsl_wireless = t2.cnt_100_20_not_dsl_wireless\n\nfrom(\n    select \n        block_geoid as geoid_bl,\n        count(distinct case when \n            (max_advertised_download_speed &gt;= 25 and max_advertised_upload_speed &gt;= 3) \n                          then location_id end) as cnt_25_3_past,\n        count(distinct case when \n            (max_advertised_download_speed &gt;= 100 and max_advertised_upload_speed &gt;= 20) \n                          then location_id end) as cnt_100_20_past,\n        count(distinct case when \n            (max_advertised_download_speed &gt;= 100 and max_advertised_upload_speed &gt;= 20\n            and technology &lt;&gt; 10) \n                          then location_id end) as cnt_100_20_not_dsl,\n        count(distinct case when \n            (max_advertised_download_speed &gt;= 100 and max_advertised_upload_speed &gt;= 20\n            and technology NOT IN (71, 72)) \n                          then location_id end) as cnt_100_20_not_wireless,\n        count(distinct case when \n            (max_advertised_download_speed &gt;= 100 and max_advertised_upload_speed &gt;= 20\n            and technology NOT IN (10, 71, 72)) \n                          then location_id end) as cnt_100_20_not_dsl_wireless\n    from \n        staging.bcat_raw\n    group by \n        block_geoid\n) as t2\nwhere    \n    t1.geoid_bl = t2.geoid_bl;\n\n-- we were focusing strickly in underserved hence \n-- we removed unserved for counts\nalter table staging.us_ntia\nadd column underserved_past int,\nadd column underserved_not_dsl int,\nadd column underserved_not_wireless int,\nadd column underserved_not_dsl_wireless int;\n\nupdate\n    staging.us_ntia\nset \n    underserved_past = cnt_25_3_past - cnt_100_20_past,\n    underserved_not_dsl = cnt_25_3_past - cnt_100_20_not_dsl,\n    underserved_not_wireless = cnt_25_3_past - cnt_100_20_not_wireless,\n    underserved_not_dsl_wireless = cnt_25_3_past - cnt_100_20_not_dsl_wireless;"
  },
  {
    "objectID": "ntia_test.html#recreating-and-generating-previous-and-new-categories",
    "href": "ntia_test.html#recreating-and-generating-previous-and-new-categories",
    "title": "testing other eligibilities",
    "section": "Recreating and generating previous and new categories",
    "text": "Recreating and generating previous and new categories\n\n\nCode\nalter table staging.us_ntia \nadd column pct_100_20_past float,\nadd column pct_25_3_past float,\nadd column pct_100_20_not_dsl float,\nadd column pct_100_20_not_wireless float,\nadd column pct_100_20_not_dsl_wireless float;\n\nupdate\n    staging.us_ntia  as t1\nset \n    pct_100_20_past = cnt_100_20_past/cnt_total_locations::float,\n    pct_25_3_past = cnt_25_3_past/cnt_total_locations::float,\n    pct_100_20_not_dsl = cnt_100_20_not_dsl / cnt_total_locations::float,\n    pct_100_20_not_wireless = cnt_100_20_not_wireless / cnt_total_locations::float,\n    pct_100_20_not_dsl_wireless = cnt_100_20_not_dsl_wireless / cnt_total_locations::float\n\nalter table staging.us_ntia\nadd column bl_100_20_area_past varchar(25),\nadd column bl_25_3_area_past varchar(25),\nadd column bl_100_20_area_not_dsl varchar(25),\nadd column bl_100_20_area_not_wireless varchar(25),\nadd column bl_100_20_area_not_dsl_wireless varchar(25);\n\nupdate\n    staging.us_ntia\nset \n    bl_100_20_area_past = case \n            when cnt_total_locations is null then 'not_reported'\n            when cnt_bcat_locations is null then 'unserved_area'\n            when pct_100_20_past &lt; .2 and pct_25_3_past &lt; .2 then 'unserved_area'\n            when pct_100_20_past &lt; .2 then 'underserved_area'\n            else 'served_area' end,\n    bl_25_3_area_past  = case \n            when cnt_total_locations is null then 'not_reported'\n            when cnt_bcat_locations is null then 'unserved_area'\n            when pct_25_3_past &lt; .2 then 'unserved_area'\n            else 'served_area' end,\n    bl_100_20_area_not_dsl = case \n            when cnt_total_locations is null then 'not_reported'\n            when cnt_bcat_locations is null then 'unserved_area'\n            when pct_100_20_not_dsl &lt; .2 and pct_25_3_past &lt; .2 then 'unserved_area'\n            when pct_100_20_not_dsl &lt; .2 then 'underserved_area'\n            else 'served_area' end,\n    bl_100_20_area_not_wireless = case \n            when cnt_total_locations is null then 'not_reported'\n            when cnt_bcat_locations is null then 'unserved_area'\n            when pct_100_20_not_wireless &lt; .2 and pct_25_3_past &lt; .2 then 'unserved_area'\n            when pct_100_20_not_wireless &lt; .2 then 'underserved_area'\n            else 'served_area' end,\n    bl_100_20_area_not_dsl_wireless = case \n            when cnt_total_locations is null then 'not_reported'\n            when cnt_bcat_locations is null then 'unserved_area'\n            when pct_100_20_not_dsl_wireless &lt; .2 and pct_25_3_past &lt; .2 then 'unserved_area'\n            when pct_100_20_not_dsl_wireless &lt; .2 then 'underserved_area'\n            else 'served_area' end;\n  \nalter table staging.us_ntia\nadd column category_past varchar(25),\nadd column category_not_dsl varchar(25),\nadd column category_not_wireless varchar(25),\nadd column category_not_dsl_wireless varchar(25);\n\nupdate staging.us_ntia\nset category_past =\n    case \n        when bl_25_3_area_past = 'not_reported' then 'Not Reported'\n        when bl_100_20_area_past = 'unserved_area' then 'Unserved'\n        when bl_100_20_area_past = 'underserved_area' then 'Underserved'\n    else 'Served' end,\n    category_not_dsl =\n    case \n        when bl_25_3_area_past = 'not_reported' then 'Not Reported'\n        when bl_100_20_area_not_dsl = 'unserved_area' then 'Unserved'\n        when bl_100_20_area_not_dsl = 'underserved_area' then 'Underserved'\n    else 'Served' end,\n     category_not_wireless = \n        case \n        when bl_25_3_area_past = 'not_reported' then 'Not Reported'\n        when bl_100_20_area_not_wireless = 'unserved_area' then 'Unserved'\n        when bl_100_20_area_not_wireless = 'underserved_area' then 'Underserved'\n    else 'Served' end,\n     category_not_dsl_wireless = \n        case \n        when bl_25_3_area_past = 'not_reported' then 'Not Reported'\n        when bl_100_20_area_not_dsl_wireless = 'unserved_area' then 'Unserved'\n        when bl_100_20_area_not_dsl_wireless = 'underserved_area' then 'Underserved'\n    else 'Served'\n     end;\n\n-- useful stuffs\nalter table staging.us_ntia\nadd column geoid_st varchar(2);\n\nupdate staging.us_ntia\nset geoid_st = left(geoid_bl, 2);\n\nalter table staging.us_ntia owner to mda_team;"
  },
  {
    "objectID": "ntia_test.html#count-by-states",
    "href": "ntia_test.html#count-by-states",
    "title": "testing other eligibilities",
    "section": "Count by states",
    "text": "Count by states\n\n\nCode\nselect\n    geoid_st,\n    sum(cnt_total_locations) as cnt_total_locaction,\n    sum(cnt_25_3_past) as cnt_25_3_past,\n    sum(underserved_past) as cnt_underserved_past,\n    sum(underserved_not_dsl) as cnt_underserved_not_dsl,\n    sum(underserved_not_wireless) as cnt_underserved_not_wireless,\n    sum(underserved_not_dsl_wireless) as cnt_underseved_not_dsl_wireless\nfrom staging.us_ntia\ngroup by geoid_st\n\n\n\n\nCode\ncnt_st_ntia &lt;- read.csv(\"data/cnt_st_ntia.csv\")\n\ntable_with_options(cnt_st_ntia)\n\n\n\n\n\n\nWe will probably need to calculate that on some rate, unsure if I want that on total number of location or by our previous count. (I skept because it was not on requirement TM, and I was running out of time)"
  },
  {
    "objectID": "ntia_test.html#eligibility-underserved-dslwireless",
    "href": "ntia_test.html#eligibility-underserved-dslwireless",
    "title": "testing other eligibilities",
    "section": "Eligibility underserved / dsl&wireless",
    "text": "Eligibility underserved / dsl&wireless\n\n\nCode\nselect\ngeoid_st,\n    count(*) as numb_bl,\n    sum(case when category_past = 'Underserved' then 1 else 0 end) as cnt_underserved_past,\n    sum(case when category_not_dsl = 'Underserved' then 1 else 0 end) as cnt_underserved_not_dsl,\n    sum(case when category_not_wireless = 'Underserved' then 1 else 0 end) as cnt_underserved_not_wireless,\n    sum(case when category_not_dsl_wireless = 'Underserved' then 1 else 0 end) as cnt_underserved_not_dsl_wireless\nfrom staging.us_ntia\ngroup by geoid_st\n\n\n\n\nCode\neligibiliy_st_ntia &lt;- read.csv(\"data/cnt_eligibility_underserved.csv\")\n\ntable_with_options(eligibiliy_st_ntia)"
  },
  {
    "objectID": "ntia_test.html#ms-building-footprint",
    "href": "ntia_test.html#ms-building-footprint",
    "title": "testing other eligibilities",
    "section": "MS building footprint",
    "text": "MS building footprint\nMS is producing a data set of buildings (polygons) build by computer vision (classification, convert to vector).\nAs we do not care of the shape of the building we just converted to point (picking one vertex per polygon).\nWe can then count those points per block and compare to the number of location than FCC is descriving.\n\n\nCode\nlibrary(ggplot2)\nvt &lt;- read.csv(\"data/vt_ms.csv\")\nvt$tot_loc &lt;-as.numeric(vt$tot_loc) \n\n\nWarning: NAs introduced by coercion\n\n\nCode\nvt$tot_loc &lt;- ifelse(is.na(vt$tot_loc), 0, vt$tot_loc)\n\nlm_ms &lt;- lm(cnt_ms ~ tot_loc, data = vt)\npot_val &lt;- seq(min(vt$tot_loc), max(vt$tot_loc), by = 0.025)\nconf_interval &lt;- predict(lm_ms, newdata = data.frame( tot_loc = pot_val) ,\n                         interval = \"prediction\", level = 0.95)\n\nplot(vt$cnt_ms, vt$tot_loc,  col = 2, asp = 1, \nxlab = \"cnt of MS buildings\", ylab = \"cnt of fcc locations\") \nabline(lm_ms, col = 4)\nlines(pot_val, conf_interval[, \"lwr\"], col = \"blue\", lty = 2)\nlines(pot_val, conf_interval[, \"upr\"], col =\" blue\", lty = 2)\n\n\n\n\n\n\n\n\n\n\nmy model (just a linear one) is probably bad (log should correct that)\nstill strong relation\nit seems MS has less locations"
  },
  {
    "objectID": "ntia_test.html#some-tldr",
    "href": "ntia_test.html#some-tldr",
    "title": "testing other eligibilities",
    "section": "Some tl:dr",
    "text": "Some tl:dr\n\nit has heterogneous effects\nit has a big impacts"
  },
  {
    "objectID": "zero_dl_up.html",
    "href": "zero_dl_up.html",
    "title": "EDA on 0/0 BSL",
    "section": "",
    "text": "TODO: update the SQL query\nCode\ntable_with_options &lt;- function(x){DT::datatable(x, rownames = FALSE,\n              extensions = 'Buttons', \n                options = list(\n                          dom = 'Blfrtip',\n                          buttons = list('copy', 'print', list(\n                            extend = 'collection',\n                            buttons = c('csv', 'excel'),\n                            text = 'Download')\n                                    )\n                          )\n            )}\n# very lazish function, col should be a string \nagg_count &lt;- function(dat, col) {\n    agg &lt;- aggregate(cbind(count = dat$count),\n                     list(name_col = dat[[col]]),\n                      sum)\n    colnames(agg) &lt;- c(col, \"count\")\n    return(agg)\n}\nThe goals of this page is storing a quick EDA about broadband services locations with 0 MBps uploads and 0 MBps downloads. To be concise we are going to call them 0/0 speeds.\nWe have counted every services that have been declared with 0/0 speeds and associated with their States, ISP and technology. To clarify that does not mean a location have 0/0 speeds only but that one “ISP x technology” is provided with this kind of service in this location.\nThe data used to provide most of the analysis was done with this 2 SQL queries. They were saved and stored in data/\nCode\nSELECT \n    state_abbr,\n    brand_name,\n    technology,\n    count(brand_name)\nFROM\n    staging.june23\nWHERE\n(max_advertised_download_speed = 0 AND\n    max_advertised_upload_speed = 0) = true\nGROUP BY brand_name, state_abbr, technology;\n\n-- first get all 0/0 then get all the non 0/0\n\nSELECT \n    state_abbr,\n    brand_name,\n    technology,\n    count(brand_name)\nFROM \n    staging.june23\nWHERE\n(max_advertised_download_speed = 0 AND\n    max_advertised_upload_speed = 0) = false\nGROUP BY brand_name, state_abbr, technology;\nCode\nzero_loc &lt;- read.csv(\"data/zero_dl_up.csv\")\nnot_zero &lt;- read.csv(\"data/not_zero_dl.csv\")"
  },
  {
    "objectID": "zero_dl_up.html#summary-by-technologies",
    "href": "zero_dl_up.html#summary-by-technologies",
    "title": "EDA on 0/0 BSL",
    "section": "Summary by technologies:",
    "text": "Summary by technologies:\n\n\nCode\nagg &lt;- agg_count(zero_loc, \"technology\") \nagg_not &lt;- agg_count(not_zero, \"technology\")\n\ntechnology &lt;- merge(agg, agg_not, by.x = \"technology\", \n                    by.y = \"technology\", all.x = TRUE, all.y = TRUE) \ncolnames(technology) &lt;- c(\"technology\",  \"cnt_zero_dl\", \"cnt_non_zero\")\ntechnology$rate_zero &lt;- round(technology$cnt_zero_dl / \n                (technology$cnt_zero_dl +  technology$cnt_non_zero), 4)\n\ntable_with_options(technology)\n\n\n\n\n\n\n\nWe do not mind too much 70 (Unlicensed Terrestrial Fixed Wireless) because we are filtering it out but we are keeping 71 (Licensed Terrestrial Fixed Wireless) , 72 (Licensed-by-Rule Terrestrial Fixed Wireless)and 10 (Copper Wire).\nTo take that into account I will filter out Unlicensed Terrestrial Fixed Wireless for the rest of this document. I also filtered out 60 and 61 to be consistant with our pipelines."
  },
  {
    "objectID": "zero_dl_up.html#summary-by-isp",
    "href": "zero_dl_up.html#summary-by-isp",
    "title": "EDA on 0/0 BSL",
    "section": "Summary by ISP",
    "text": "Summary by ISP\n\n\nCode\nfilter_sat &lt;- c(60, 61, 70)\nzero_loc &lt;- zero_loc[which(! zero_loc$technology %in% filter_sat), ]\nnot_zero &lt;- not_zero[which(! not_zero$technology %in% filter_sat), ]\n\nagg &lt;- agg_count(zero_loc, \"brand_name\")\nagg_not &lt;- agg_count(not_zero, \"brand_name\")\n\nrate_zero &lt;- merge(agg, agg_not, \n                   by.x = \"brand_name\", by.y = \"brand_name\"\n                   , all.x = TRUE) \n\ncolnames(rate_zero) &lt;- c(\"brand_name\", \"cnt_zero_dl\", \"cnt_non_zero\")\nrate_zero$rate_zero &lt;- round(rate_zero$cnt_zero_dl /\n                 (rate_zero$cnt_zero_dl +  rate_zero$cnt_non_zero),\n                            4)\n\ntable_with_options(rate_zero[\n                    order(rate_zero$cnt_zero_dl, decreasing = TRUE),])\n\n\n\n\n\n\n\n\n402 ISPs are declaring services with 0/0 MBips (We have 2902 ISPs registered in FCC NBM)"
  },
  {
    "objectID": "zero_dl_up.html#sumamry-by-states",
    "href": "zero_dl_up.html#sumamry-by-states",
    "title": "EDA on 0/0 BSL",
    "section": "Sumamry by States",
    "text": "Sumamry by States\n\n\nCode\nst_agg_zero &lt;- agg_count(zero_loc, \"state_abbr\")\nst_agg_not &lt;- agg_count(not_zero, \"state_abbr\")\n\nst_agg &lt;- merge(st_agg_zero, st_agg_not, \n                by.x = \"state_abbr\", by.y = \"state_abbr\",\n                all.x = TRUE, all.y = TRUE)\ncolnames(st_agg) &lt;- c(\"ST\", \"cnt_zero_dl\", \"cnt_non_zero\")\nst_agg$rate_zero &lt;- round(st_agg$cnt_zero_dl /\n                    (st_agg$cnt_zero_dl +  st_agg$cnt_non_zero),\n                            4) \nlibrary(ggplot2)\n\nggplot(st_agg[!is.na(st_agg$rate_zero),], aes(rate_zero)) +\n  geom_boxplot(orientation = \"y\",\n  fill='#A4A4A4', color=\"black\") +\n  coord_flip() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\ntable_with_options(st_agg[order(st_agg$rate_zero, decreasing = TRUE), ])\n\n\n\n\n\n\n One point of concern is that services with 0/0 speeds could be generated for various reasons. One could be that some technology offer very low downloads/uploads and that is rounding to 0 an other could be that the location is not actually deserved but the ISP think it can do it."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Sharing quick EDA about FCC data.\nFCC BDC: June 2023 release, downloaded 21-11-2023"
  }
]